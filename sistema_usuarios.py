"""
##### Hands-on: Sistema de Cadastro e An√°lise de Usu√°rios #####

üéØ Objetivo:

Criar um programa que permite:

‚úÖ Cadastrar usu√°rios com nome, idade e cidade.
‚úÖ Listar todos os usu√°rios cadastrados.
‚úÖ Filtrar usu√°rios por idade m√≠nima.
‚úÖ Exibir estat√≠sticas b√°sicas sobre os usu√°rios.

"""

# Passo 1: Criando a Estrutura de Dados

usuarios = {}
proximo_id = 1 #ID inicial do usu√°rio 


# Passo 2: Criando Fun√ß√µes para o Cadastro

    # - Fun√ß√£o para cadastrar um usu√°rio

def cadastrar_usuario(nome, idade, cidade):
    global proximo_id
    usuarios[proximo_id]= {"nome":nome, "idade":idade, "cidade": cidade}
    print(f"Usu√°rio {nome} cadastrado com sucesso! ID: {proximo_id}")
    proximo_id += 1 #incrementando 1 no ID do pr√≥ximo usu√°rio
 
# Passo 3: Criando Fun√ß√µes para Analisar Usu√°rios

    # - Fun√ß√£o para listar todos os usu√°rios
def listar_usuarios ():
    if not usuarios:
        print("N√£o existem usu√°rios cadastrados!")
        return
    print("\nLista de usu√°rios:")
    for id,dados in usuarios.items():
        print (f"ID:{id} | Nome: {dados["nome"]} | Idade: {dados["idade"]} | Cidade: {dados["cidade"]}")
       
    # - Fun√ß√£o para filtrar usu√°rios por idade m√≠nima
def filtrar_por_idade(idade_minima):
    filtrados = {
        id: dados
        for id, dados in usuarios.items()
        if int(dados["idade"]) >= idade_minima
        }
    if not filtrados:
      print(f"Nenhum usu√°rio encontrado com idade maior ou igual a {idade_minima}.")
      return
    print(f"\nUsu√°rios com idade maior ou igual a {idade_minima}:")
    for id,dados in filtrados.items():
        print(f"ID:{id} | Nome: {dados["nome"]} | Idade: {dados["idade"]} | Cidade: {dados["cidade"]}")
    
    # - Fun√ß√£o para exibir estat√≠sticas gerais
def estatisticas_usuarios():
    if not usuarios:
        print("N√£o existem usu√°rios cadastrados!")
        return
    total = len(usuarios)
    idades = [int(dados["idade"]) for dados in usuarios.values()]
    idade_media = sum(idades)/total
    idade_max = max(idades)
    idade_min = min(idades)

    print("\nEstat√≠sticas dos Usu√°rios:")
    print(f"Total de usu√°rios: {total}")
    print(f"Idade m√©dia: {idade_media}")
    print(f"Idade m√°xima: {idade_max}")
    print(f"Idade m√≠nima: {idade_min}")

# Passo 4: Criando um Menu Interativo

def menu():
    while True:
        print("\n======== MENU DO SISTEMA DE USU√ÅRIOS ========")
        print("1. Cadastrar um novo usu√°rio")
        print("2. Listar todos os usu√°rios cadastrados")
        print("3. Filtrar usu√°rios cadastrados por idade")
        print("4. Exibir estat√≠sticas b√°sicas sobre usu√°rios")
        print("5. Sair")

        opcao = input("Escolha uma op√ß√£o:")

        if opcao == "1":
            nome = input("Nome:")
            idade = input("Idade:")
            cidade = input("Cidade:")
            cadastrar_usuario(nome, idade, cidade)

        elif opcao == "2":
            listar_usuarios()

        elif opcao == "3":
            idade_minima = int(input("Digite a idade m√≠nima:"))
            filtrar_por_idade(idade_minima)

        elif opcao == "4":
            estatisticas_usuarios()

        elif opcao == "5":
            print("Saindo do sistema...")
            break

        else:
            print("Op√ß√£o inv√°lida! Tente novamente.")

#Para iniciar o menu

print("=" * 45)
print("         SISTEMA DE CADASTRO DE USU√ÅRIOS")
print("=" * 45)
print("Bem-vindo(a) ao sistema!")
print("Voc√™ pode cadastrar usu√°rios com nome, idade e cidade.")
print("Tamb√©m pode listar, filtrar por idade e ver estat√≠sticas.")
print("Para selecionar uma op√ß√£o, digite o n√∫mero correspondente.")
print("=" * 45)
menu()


        
    

